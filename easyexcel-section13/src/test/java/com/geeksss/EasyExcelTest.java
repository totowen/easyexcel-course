package com.geeksss;

import com.alibaba.excel.EasyExcel;
import com.alibaba.excel.util.FileUtils;
import com.geeksss.model.UserInfoModel;
import lombok.SneakyThrows;
import lombok.extern.slf4j.Slf4j;
import org.junit.Test;

import java.io.File;
import java.net.URL;
import java.util.Base64;
import java.util.Collections;

/**
 * EasyExcel 单元测试。
 */
@Slf4j
public class EasyExcelTest {

    @Test
    @SneakyThrows
    public void test() {
        // 封装：模型。
        UserInfoModel userInfoModel = new UserInfoModel();
        userInfoModel.setFileImage(new File("D:\\logo.png"));
        userInfoModel.setByteImage(FileUtils.readFileToByteArray(new File("D:\\logo.png")));
        userInfoModel.setInputStreamImage(FileUtils.openInputStream(new File("D:\\logo.png")));
        userInfoModel.setUrlImage(new URL("https://easyexcel.opensource.alibaba.com/img/logo.png"));
        userInfoModel.setStringImage("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");

        // 测试：导出。
        EasyExcel.write("D:\\export.xlsx").sheet("用户信息").head(UserInfoModel.class).doWrite(Collections.singletonList(userInfoModel));
    }

    @Test
    @SneakyThrows
    public void testGenerateBase64() {
        byte[] bytes = FileUtils.readFileToByteArray(new File("D:\\logo.png"));
        String base64 = Base64.getEncoder().encodeToString(bytes);
        System.out.println(base64);
    }

}
